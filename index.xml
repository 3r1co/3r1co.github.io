<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3r1.co</title><link>/</link><description>Recent content on 3r1.co</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 Dec 2021 14:53:42 +0200</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS re:Invent 2021 reCap</title><link>/posts/reinvent2021/</link><pubDate>Fri, 03 Dec 2021 14:53:42 +0200</pubDate><guid>/posts/reinvent2021/</guid><description>After almost two years of COVID, work from home, and not seeing any technical person outside my company it was finally time again to hit the road to Las Vegas to learn and exchange about the latest innovations AWS has to offer.
Annoucements AWS is positioning itself even closer to it&amp;rsquo;s customers and catch them where they are: In AWS, traditional datacenters, at the Edge (Wavelength and Local Zones) and even in Space (GroundStation).</description></item><item><title>Nginx, Letsencrypt, Kong and how it makes life easy</title><link>/posts/nginx-kong/</link><pubDate>Thu, 16 Feb 2017 14:53:42 +0200</pubDate><guid>/posts/nginx-kong/</guid><description>This Blog post is going to address several topics that were bothering me in the last days and weeks:
How do I add most comfortably new SSL Certificates to my server without causing a downtime for the blog? How do I add new services to my server, expose them to the internet, have automatic HTTPS enabled and can how I can I protect them most easily? The Nginx Setup So, talking about the first point, the downtime was really struggeling me.</description></item><item><title>Code Coverage with TomEE, JaCoCo and SonarQube</title><link>/posts/code-coverage/</link><pubDate>Wed, 08 Feb 2017 14:53:34 +0200</pubDate><guid>/posts/code-coverage/</guid><description>Recently we were facing the challenge how to integrate code coverage analysis for functional tests in our continuous delivery process.
We were already using JaCoCo before, but checking on the internet I never found one simple example to start from scratch. So I decided to publish one here.
Despite the documentation is quite heavy, it is actually really simple to integrate code coverage analysis in your environment (in the example we are using a TomEE Container).</description></item><item><title>Continuous Delivery (and Deployment) with Travis CI and Docker Services</title><link>/posts/continuous-delivery/</link><pubDate>Wed, 01 Feb 2017 14:53:02 +0200</pubDate><guid>/posts/continuous-delivery/</guid><description>We are doing a lot of Kubernetes and Openshift at work, having our Continuous Integration / Continuous Delivery environment set up with Jenkins. For my playground here I wanted to try out something different and so I checked out Travis CI which looked just appropriate.
I had four goals in mind when I started with Travis:
I want to build my software with each change in the repository I want to package this software in a Docker container I want to publish this Docker image to my private registry (r.</description></item><item><title>Welcome to my blog</title><link>/posts/welcome/</link><pubDate>Sun, 22 Jan 2017 14:53:05 +0200</pubDate><guid>/posts/welcome/</guid><description>It&amp;rsquo;s a rainy sunday afternoon in the south of france, so I decided to take the opportunity and play a bit around with some of the nice tools I usually work with on my job.
So far we have:
A CoreOS VM on DigitalOcean Ghost for this blog A private docker registry under r.3r1.co Nginx as reverse proxy And SSL Certificates from Let&amp;rsquo;s Encrypt I&amp;rsquo;m using this environment to play a bit around and share with the world things that might be of interest.</description></item></channel></rss>